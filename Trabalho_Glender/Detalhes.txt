ProblmeaMochilaD:
O valor máximo que pode ser colocado na mochila é: 1149
Itens escolhidos: DINAMICA
Nome: X29, Peso: 5, Valor: 382
Nome: X28, Peso: 5, Valor: 386
Nome: X19, Peso: 5, Valor: 381

Esse algoritmo utiliza a abordagem de Programação Dinâmica para resolver o problema da mochila. A programação dinâmica é uma técnica que envolve dividir um problema em subproblemas menores e resolver cada subproblema apenas uma vez, armazenando as soluções para evitar recálculos desnecessários. No caso do problema da mochila, a tabela tabela[i][w] armazena as soluções ótimas para subproblemas menores, onde i representa o número do item e w representa a capacidade da mochila. Essa abordagem ajuda a evitar a repetição de cálculos, melhorando a eficiência da solução.


ProblmeaMochilaGuloso:
O valor máximo que pode ser colocado na mochila é: 1137
Itens escolhidos: GULOSO
Nome: X30, Peso: 4, Valor: 369
Nome: X28, Peso: 5, Valor: 386
Nome: X29, Peso: 5, Valor: 382

Esse algoritmo utiliza a abordagem gulosa, ele ordena as entradas de dados em um relação valor/peso e dai em diante ele faz escolhas locais otimas sem condirar o contexto global. Essa abordagem gulosa não garante uma solução globalmente ótima para o problema da mochila, mas, em muitos casos, pode fornecer soluções aproximadas eficientes. A ordenação dos itens pela relação valor/peso antes da seleção dos itens é uma parte fundamental dessa estratégia gulosa.

Complexidade: A maior complexidade desse algoritmo está na ordenação da relação valor/peso dos itens, e sua complexidade é de O(n log n)





